{"version":3,"sources":["components/utils/ModalWindow/ModalWindow.module.scss","pages/pageCardFood/pageCardFood.module.scss","components/patterns/BtnsCtrlCardHeader/BtnsCtrlCardHeader.module.scss","components/patterns/FormInputData/FormInputData.module.scss","components/general/TopMenu/TopMenu.module.scss","redux/cardFoods/reducerCardFood.js","redux/cardFoods/actionCardFood.js","redux/cardUser/reducerCardUser.js","redux/cardUser/actionCardUser.js","utils/helpers/helpers.js","components/utils/Button/Button.js","components/utils/MenuList/MenuList.js","components/general/TopMenu/TopMenu.js","components/utils/Title/Title.js","components/patterns/BtnsCtrlCardHeader/BtnsCtrlCardHeader.js","components/utils/ModalWindow/ModalWindow.js","components/utils/Input/Input.js","components/patterns/BtnsColection/BtnsColection.js","components/patterns/FormInputData/FormInputData.js","pages/pageCardFood/pageCardFood.js","pages/pageCardUser/pageCardUser.js","App/App.js","index.js","redux/reducers/reducerIsCardsOpen.js","rootReducer.js","createStore.js"],"names":["module","exports","ActionType","actionIsCardFoodOpen","value","type","payload","actionIsCardUserOpen","isOpen","getPropsAttribute","atrbValue","Button","props","title","action","actionId","data-action","data-action-id","defaultProps","MenuList","renderData","map","data","TopMenu","className","scss","topMenu","nav","list","renderMenu","parrentBtns","el","item","cardsList","Title","dataRender","renderBtns","BtnsCtrlCardHeader","btnsList","ModalWindow","id","console","log","window","header","children","Input","label","inputName","inputValue","name","styles","display","BtnsColection","style","key","shortid","generate","InputDataForm","btnsColSets","useState","setData","foodsCard","onChange","e","target","obj","nameIn","PageFoodCard","formInputsDescrSets","formSaleCtrlSets","formUnitsSets","setsLocalBtnsCard","setsGlobalBtnsCard","FormInputData","advSetPanel","bottomSideBar","PageCardUser","App","Component","dispatch","useDispatch","isCardsOpen","useSelector","state","openId","setOpenId","useEffect","includes","onClick","dataset","handleCard","idArr","parent","find","closest","getIdByEvent","filter","food","user","reducerIsCardsOpen","combineReducers","rootReducer","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5be73393.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"ModalWindow_window__30yTd\",\"header\":\"ModalWindow_header__2uqEW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomSideBar\":\"pageCardFood_bottomSideBar__1IkKw\",\"advSetPanel\":\"pageCardFood_advSetPanel__20fBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnsList\":\"BtnsCtrlCardHeader_btnsList__1_Xgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"foodsCard\":\"FormInputData_foodsCard__1OR_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topMenu\":\"TopMenu_topMenu__3BWBN\",\"item\":\"TopMenu_item__2MSrH\"};","import {combineReducers} from 'redux';\r\n\r\nexport const ActionType = {\r\n    IS_CARD_FOODS_OPEN: \"IS_CARD_FOODS_OPEN\",\r\n}\r\n\r\nexport const isCardFoodOpenReducer = (state = false, {type, payload}) => {\r\n    switch (type) {\r\n        case ActionType.IS_CARD_FOODS_OPEN:\r\n            return payload;   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {ActionType} from './reducerCardFood';\r\n\r\nexport const actionIsCardFoodOpen = value => ({\r\n    type:ActionType.IS_CARD_FOODS_OPEN,\r\n    payload: value,\r\n});","import {combineReducers} from 'redux';\r\n\r\nexport const ActionType = {\r\n    IS_CARD_USER_OPEN: \"IS_CARD_USER_OPEN\", \r\n}\r\n\r\nexport const isCardUserOpenReducer = (state = false, {type, payload}) => {\r\n    switch (type) {\r\n        case ActionType.IS_CARD_USER_OPEN:\r\n            return payload;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {ActionType} from './reducerCardUser';\r\n\r\nexport const actionIsCardUserOpen = isOpen => ({\r\n    type: ActionType.IS_CARD_USER_OPEN,\r\n    payload: isOpen,\r\n})","export const getDataValueRight = (name, value, dataArr) => dataArr.length > 0 && dataArr.find(spec => spec.dataName === name) && dataArr.find(spec => spec.dataName === name).dataValue || name === name && value || \"\";\r\n\r\nexport const getIdByEvent = (e, idArr) => {\r\n    const {action, actionId} = e.target.dataset;\r\n    const parent =  idArr.find(el => e.target.closest(`#${el}`));  \r\n\r\n    if (action === \"close\") return {\r\n        id: parent,\r\n        action,\r\n    }\r\n\r\n    if (action === \"open\") return {\r\n        id: actionId,\r\n        action,\r\n    }\r\n}\r\n\r\nexport const getPropsAttribute = atrbValue => atrbValue ? atrbValue : \"\";","import React from 'react';\r\nimport {getPropsAttribute} from '../../../utils/helpers/helpers';\r\n\r\n\r\nconst Button = ({props}) => {\r\n    const {title, type, action, actionId} = props; \r\n    \r\n    return (\r\n       <button \r\n       type={type ? type : \"button\"} data-action={getPropsAttribute(action)}  data-action-id={getPropsAttribute(actionId)}\r\n    >\r\n        {getPropsAttribute(title)}\r\n       </button>\r\n    )\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n    title: \"\",\r\n    type: \"\",\r\n    action: \"\",\r\n    actionId: \"\"\r\n}","import React from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nconst MenuList = props => {\r\n    const {renderData} = props;\r\n    return (\r\n        <ul>\r\n            {renderData.map(data =>\r\n                {\r\n                return (<li>\r\n                    <Button props={data} />\r\n                </li>)}\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport Button from '../../utils/Button/Button';\r\nimport MenuList from '../../utils/MenuList/MenuList';\r\n\r\nimport renderMenu from '../../../utils/renderData/renderMenu.json';\r\n\r\nimport scss from './TopMenu.module.scss';\r\n\r\nconst TopMenu = () => {\r\n\r\n    return (\r\n        <header className={scss.topMenu}>\r\n            <nav className={scss.nav}>\r\n                <ul className={scss.list}>\r\n                    {renderMenu.parrentBtns.map(el => (\r\n                        <li className={scss.item}>\r\n                            <Button props={el} />\r\n                            <MenuList  renderData={el.cardsList}/>\r\n                        </li>\r\n                        )\r\n                    )}\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default TopMenu;","import React from 'react';\r\n\r\nconst Title = (props) => {\r\n\r\n    return(\r\n    <h2>{props.title}</h2>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport Button from '../../utils/Button/Button';\r\nimport * as renderBtns from '../../../utils/renderData/renderBtns.json';\r\nimport scss from \"./BtnsCtrlCardHeader.module.scss\";\r\n\r\nconst dataRender = renderBtns.btnsCtrlCardHeader;\r\n\r\nconst BtnsCtrlCardHeader = ({actionId}) => {\r\n    return (\r\n        <ul className={scss.btnsList}>\r\n            {dataRender.map(data => {\r\n               \r\n                return (\r\n                    <li>\r\n                    <Button props={{...data, actionId}} />\r\n                </li>   \r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BtnsCtrlCardHeader;","import React from 'react';\r\nimport Title from '../Title/Title';\r\nimport BtnsCtrlCardHeader from '../../patterns/BtnsCtrlCardHeader/BtnsCtrlCardHeader';\r\nimport scss from './ModalWindow.module.scss';\r\n\r\nconst ModalWindow = props => {\r\n\r\n    const {title, id, actionId} = props;\r\n    console.log('actionId_modalWindow :>> ', actionId);\r\n\r\n    return (\r\n        <section id={id} className={scss.window}>\r\n            <div className={scss.header}>\r\n                <Title title={title}/>    \r\n                <BtnsCtrlCardHeader actionId={actionId}/>\r\n            </div>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\n\r\nconst Input = ({props}) => {\r\n\r\n    const {label, inputName, inputValue, type} = props;\r\n\r\n    return (\r\n        <label>\r\n            {`${label}:`}\r\n            <input type={type} name={inputName} value={inputValue}/>\r\n        </label>\r\n    )\r\n    \r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport Button from '../../utils/Button/Button';\r\n\r\nconst styles = {\r\n    list: {\r\n        display: \"flex\",\r\n    },\r\n};\r\n\r\nconst BtnsColection = props => {\r\n    const {dataRender} = props;\r\n    \r\n    return (\r\n        <ul style={styles.list}>\r\n            {\r\n                dataRender.map(data => <li key={shortid.generate()}><Button props={data}/></li>)\r\n            }\r\n        </ul>\r\n        \r\n    )\r\n}\r\n\r\nexport default BtnsColection;","import React, {useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport Input from '../../utils/Input/Input';\r\nimport BtnsColection from '../BtnsColection/BtnsColection';\r\nimport { postFoodsData } from '../../../utils/fetch/fetchForm';\r\nimport scss from './FormInputData.module.scss';\r\n\r\nconst InputDataForm = props => {\r\n    const {dataRender, btnsColSets} = props;\r\n\r\n    // state\r\n    const [data, setData] = useState({});\r\n    \r\n    // handlers\r\n    const handleGetInputData = e => {\r\n        const {name, value} = e.target;\r\n        const obj = {};\r\n        obj[name] = value;\r\n        setData({...data, ...obj});\r\n    }\r\n    const handleFormSubmit = e => {\r\n        e.preventDefault();        \r\n        const id = shortid.generate();        \r\n        postFoodsData({id, ...data});\r\n    }\r\n\r\n    return (\r\n        \r\n        <form className={scss.foodsCard}\r\n            onChange={handleGetInputData}\r\n            // onSubmit={handleFormSubmit}\r\n            >\r\n            {\r\n                dataRender.map(\r\n                    el => <Input \r\n                    props={\r\n                        {\r\n                            label: el.label,\r\n                            inputName: el.nameIn,\r\n                            type: el.type ? el.type : \"text\"\r\n                        }\r\n                    }\r\n                />\r\n                )\r\n            }\r\n            <BtnsColection dataRender={btnsColSets} />\r\n        </form>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default InputDataForm;","import React from 'react';\r\nimport ModalWindow from '../../components/utils/ModalWindow/ModalWindow';\r\nimport FormInputData from '../../components/patterns/FormInputData/FormInputData';\r\nimport BtnsFinished from '../../components/patterns/BtnsColection/BtnsColection';\r\nimport Title from '../../components/utils/Title/Title';\r\n\r\nimport scss from './pageCardFood.module.scss';\r\nimport * as dataRender from '../../utils/renderData/renderCardFood.json';\r\n\r\nconst PageFoodCard = (props) => {\r\n        \r\n    const {id, title} = dataRender.modalFoodCard;\r\n    const {formInputsDescrSets, formSaleCtrlSets, formUnitsSets, setsLocalBtnsCard, setsGlobalBtnsCard} = dataRender.default;\r\n\r\n    return (\r\n            <ModalWindow id={id} title={title} actionId={id}>\r\n                <FormInputData dataRender={formInputsDescrSets} btnsColSets={setsLocalBtnsCard}/>\r\n                <ul className={scss.advSetPanel}>\r\n                    <li>\r\n                        <Title title=\"Цена и наценка\"/>\r\n                        <FormInputData dataRender={formSaleCtrlSets} btnsColSets={setsLocalBtnsCard}/>\r\n                    </li>    \r\n                    <li>\r\n                        <Title title=\"Единицы измерения\"/>\r\n                        <FormInputData dataRender={formUnitsSets} btnsColSets={setsLocalBtnsCard}/>\r\n                    </li>   \r\n                </ul>\r\n                <div className={scss.bottomSideBar}>\r\n                   <BtnsFinished dataRender={setsGlobalBtnsCard}/>    \r\n                </div>   \r\n            </ModalWindow>\r\n    )\r\n}\r\n\r\nexport default PageFoodCard;","import React from 'react';\r\n\r\n// import components\r\nimport ModalWindow from '../../components/utils/ModalWindow/ModalWindow';\r\nimport FormInputData from '../../components/patterns/FormInputData/FormInputData';\r\nimport BtnsFinished from '../../components/patterns/BtnsColection/BtnsColection';\r\nimport Title from '../../components/utils/Title/Title';\r\n\r\n// imp utils\r\nimport * as dataRender from '../../utils/renderData/renderCardUser.json';\r\n\r\n// imp styles\r\nimport scss from './pageCardUser.module.scss';\r\n\r\nconst PageCardUser = () => {\r\n\r\n    const {id, title} = dataRender.modalCardUser;\r\n    const {formInputsDescrSets, formSaleCtrlSets, formUnitsSets, setsLocalBtnsCard, setsGlobalBtnsCard} = dataRender.default;\r\n\r\n    return (\r\n        <ModalWindow id={id} title={title} actionId={id}>\r\n            <FormInputData dataRender={formInputsDescrSets} btnsColSets={setsLocalBtnsCard}/>\r\n            <ul className={scss.advSetPanel}>\r\n                <li>\r\n                    <Title title=\"Цена и наценка\"/>\r\n                    <FormInputData dataRender={formSaleCtrlSets} btnsColSets={setsLocalBtnsCard}/>\r\n                </li>    \r\n                <li>\r\n                    <Title title=\"Единицы измерения\"/>\r\n                    <FormInputData dataRender={formUnitsSets} btnsColSets={setsLocalBtnsCard}/>\r\n                </li>   \r\n            </ul>\r\n            <div className={scss.bottomSideBar}>\r\n               <BtnsFinished dataRender={setsGlobalBtnsCard}/>    \r\n            </div>   \r\n        </ModalWindow>\r\n    )\r\n}\r\n\r\nexport default PageCardUser;","import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n// import actions\r\nimport {actionIsCardFoodOpen} from '../redux/cardFoods/actionCardFood';\r\nimport {actionIsCardUserOpen} from '../redux/cardUser/actionCardUser';\r\n\r\n// import components\r\nimport TopMenu from '../components/general/TopMenu/TopMenu';\r\nimport PageCardFood from '../pages/pageCardFood/pageCardFood';\r\nimport PageCardUser from '../pages/pageCardUser/pageCardUser';\r\n\r\n// import helpers\r\nimport {getIdByEvent} from '../utils/helpers/helpers';\r\nimport './App.module.scss';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  // State\r\n  const isCardsOpen = useSelector(state => state.isCardsOpen);\r\n\r\n  // state\r\n  const [openId, setOpenId] = useState([]);\r\n\r\n  // handlers\r\n  const handlerCloseModal = e => {\r\n    const {action, actionId} = e.target.dataset;    \r\n    const handleCard = action && getIdByEvent(e, openId);\r\n\r\n    console.log('actionId_handle :>> ', actionId);\r\n    \r\n    if(action === \"open\") {\r\n      !openId.includes(actionId) && setOpenId([...openId, actionId]);      \r\n    }\r\n    if(action === \"close\" && handleCard.id === actionId) {\r\n      openId.includes(actionId) && setOpenId([...openId].filter(id => id !== actionId));\r\n    }\r\n  } \r\n\r\n  // effects\r\n  useEffect(() => {\r\n    openId.includes('card-food') && dispatch(actionIsCardFoodOpen(true));\r\n    !openId.includes('card-food') && dispatch(actionIsCardFoodOpen(false));\r\n    \r\n    \r\n    openId.includes('card-user') && dispatch(actionIsCardUserOpen(true));\r\n    console.log('openId_eff :>> ', openId);\r\n    !openId.includes('card-user') && dispatch(actionIsCardUserOpen(false));\r\n    // console.log('openId_eff :>> ', openId);\r\n  }, [openId])\r\n\r\n  return (\r\n      <div onClick={handlerCloseModal}>\r\n        <TopMenu />\r\n        {isCardsOpen.food && <PageCardFood />}\r\n        {isCardsOpen.user && <PageCardUser />}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport App from './App/App';\r\nimport createStore from './createStore';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\nconst store = createStore;\r\n\r\nconst render = Component => {\r\n  return ReactDOM.render(\r\n    <Provider store={store}>          \r\n      <Component />          \r\n    </Provider>,\r\n    document.getElementById('root'),\r\n  );\r\n};\r\n\r\nrender(App);\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./App/App', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextApp = require('./App/App').default;\r\n    render(NextApp);\r\n  });\r\n}\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA","import {combineReducers} from 'redux';\r\nimport {isCardFoodOpenReducer} from '../cardFoods/reducerCardFood';\r\nimport {isCardUserOpenReducer} from '../cardUser/reducerCardUser';\r\n\r\nexport const reducerIsCardsOpen = combineReducers({\r\n    food: isCardFoodOpenReducer,\r\n    user: isCardUserOpenReducer,\r\n})","import { combineReducers } from 'redux';\r\n// import { persistReducer } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\n\r\n// const sessionPersistConfig = {\r\n//   key: 'session',\r\n//   storage,\r\n//   whitelist: ['token'],\r\n// };\r\n\r\n// const locationPersistConfig = {\r\n//   key: 'location',\r\n//   storage,\r\n// };\r\nimport {reducerIsCardsOpen} from './redux/reducers/reducerIsCardsOpen';\r\n\r\nconst rootReducer = combineReducers({\r\n    isCardsOpen: reducerIsCardsOpen,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n// import logger from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middlewares = process.env.NODE_ENV === 'development' ? [thunk] : [thunk];\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares)),\r\n);"],"sourceRoot":""}